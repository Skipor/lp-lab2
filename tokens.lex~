%{
#include <string>
#include "node.h"
#include "parser.hpp"
#define SAVE_STRING yylval.string = new std::string(yytext, yyleng)
#define TOKEN(t) (yylval.token = t)
extern "C" int yywrap() { }
%}

%%
"//"[^\n]*              ;
^[ \t]                  yylval.intval = yyleng; return TINTEND
[ \t\n]                 ;
[a-z][a-zA-Z0-9_]*      SAVE_STRING; return TIDENTIFIER;
[A-Z][a-zA-Z0-9_]*      SAVE_STRING; return TTNAME;
[0-9]+\.[0-9]*          SAVE_STRING; return TDOUBLE;
[0-9]+                  SAVE_STRING; return TINTEGER;
"::"                    return TOKEN(TTYPEOF)
"|"                     return TOKEN(TCASE)
"->"                    return TOKEN(TARROW)
"=="                    return TOKEN(TCEQ);
"!="                    return TOKEN(TCNE);
"<"                     return TOKEN(TCLT);
"<="                    return TOKEN(TCLE);
">"                     return TOKEN(TCGT);
">="                    return TOKEN(TCGE);
"="                     return TOKEN(TEQUAL);
"("                     return TOKEN(TLPAREN);
")"                     return TOKEN(TRPAREN);
"{"                     return TOKEN(TLBRACE);
"}"                     return TOKEN(TRBRACE);
"_"                     return TOKEN(TBLANK)
"."                     return TOKEN(TDOT);
","                     return TOKEN(TCOMMA);
"+"                     return TOKEN(TPLUS);
"-"                     return TOKEN(TMINUS);
"*"                     return TOKEN(TMUL);
"/"                     return TOKEN(TDIV);
.                       printf("Unknown token!\n"); yyterminate();

%%
