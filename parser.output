Grammar

    0 $accept: program $end

    1 program: stmts
    2        | /* empty */

    3 stmts: stmt
    4      | stmts stmt
    5      | stmts TENDL

    6 stmt: type_decl
    7     | func_bind
    8     | func_case

    9 type_decl: ident TTYPEOF type TENDL

   10 type: TLPAREN type TRPAREN
   11     | type TARROW type
   12     | name_of_type

   13 func_pattern_args: func_pattern_args func_pattern_arg
   14                  | func_pattern_arg

   15 func_pattern_arg: TBLANK
   16                 | numeric
   17                 | ident

   18 case: TCASE expr TEQUAL expr TENDL

   19 case_list: case
   20          | case_list TINTEND case

   21 func_pattern: ident func_pattern_args
   22             | ident

   23 func_bind: func_pattern TEQUAL expr TENDL

   24 func_case: func_pattern case_list

   25 ident: TIDENTIFIER

   26 name_of_type: TTNAME

   27 numeric: TINTEGER
   28        | TDOUBLE
   29        | TBOOL

   30 expr: ident TLPAREN call_args TRPAREN
   31     | ident
   32     | numeric
   33     | expr equ_op expr
   34     | expr cmp_op expr
   35     | expr add_op expr
   36     | expr mul_op expr
   37     | TLPAREN expr TRPAREN

   38 call_args: /* empty */
   39          | expr
   40          | call_args TCOMMA expr

   41 equ_op: TCEQ
   42       | TCNE

   43 cmp_op: TCLT
   44       | TCLE
   45       | TCGT
   46       | TCGE

   47 add_op: TPLUS
   48       | TMINUS

   49 mul_op: TMUL
   50       | TDIV


Terminals, with rules where they appear

$end (0) 0
error (256)
TINTEND (258) 20
TTNAME (259) 26
TIDENTIFIER (260) 25
TINTEGER (261) 27
TDOUBLE (262) 28
TBOOL (263) 29
TCEQ (264) 41
TCNE (265) 42
TCLT (266) 43
TCLE (267) 44
TCGT (268) 45
TCGE (269) 46
TEQUAL (270) 18 23
TLPAREN (271) 10 30 37
TRPAREN (272) 10 30 37
TCOMMA (273) 40
TPLUS (274) 47
TMINUS (275) 48
TMUL (276) 49
TDIV (277) 50
TBLANK (278) 15
TTYPEOF (279) 9
TCASE (280) 18
TARROW (281) 11
TENDL (282) 5 9 18 23


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
program (29)
    on left: 1 2, on right: 0
stmts (30)
    on left: 3 4 5, on right: 1 4 5
stmt (31)
    on left: 6 7 8, on right: 3 4
type_decl (32)
    on left: 9, on right: 6
type (33)
    on left: 10 11 12, on right: 9 10 11
func_pattern_args (34)
    on left: 13 14, on right: 13 21
func_pattern_arg (35)
    on left: 15 16 17, on right: 13 14
case (36)
    on left: 18, on right: 19 20
case_list (37)
    on left: 19 20, on right: 20 24
func_pattern (38)
    on left: 21 22, on right: 23 24
func_bind (39)
    on left: 23, on right: 7
func_case (40)
    on left: 24, on right: 8
ident (41)
    on left: 25, on right: 9 17 21 22 30 31
name_of_type (42)
    on left: 26, on right: 12
numeric (43)
    on left: 27 28 29, on right: 16 32
expr (44)
    on left: 30 31 32 33 34 35 36 37, on right: 18 23 33 34 35 36 37
    39 40
call_args (45)
    on left: 38 39 40, on right: 30 40
equ_op (46)
    on left: 41 42, on right: 33
cmp_op (47)
    on left: 43 44 45 46, on right: 34
add_op (48)
    on left: 47 48, on right: 35
mul_op (49)
    on left: 49 50, on right: 36


state 0

    0 $accept: . program $end

    TIDENTIFIER  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program       go to state 2
    stmts         go to state 3
    stmt          go to state 4
    type_decl     go to state 5
    func_pattern  go to state 6
    func_bind     go to state 7
    func_case     go to state 8
    ident         go to state 9


state 1

   25 ident: TIDENTIFIER .

    $default  reduce using rule 25 (ident)


state 2

    0 $accept: program . $end

    $end  shift, and go to state 10


state 3

    1 program: stmts .
    4 stmts: stmts . stmt
    5      | stmts . TENDL

    TIDENTIFIER  shift, and go to state 1
    TENDL        shift, and go to state 11

    $default  reduce using rule 1 (program)

    stmt          go to state 12
    type_decl     go to state 5
    func_pattern  go to state 6
    func_bind     go to state 7
    func_case     go to state 8
    ident         go to state 9


state 4

    3 stmts: stmt .

    $default  reduce using rule 3 (stmts)


state 5

    6 stmt: type_decl .

    $default  reduce using rule 6 (stmt)


state 6

   23 func_bind: func_pattern . TEQUAL expr TENDL
   24 func_case: func_pattern . case_list

    TEQUAL  shift, and go to state 13
    TCASE   shift, and go to state 14

    case       go to state 15
    case_list  go to state 16


state 7

    7 stmt: func_bind .

    $default  reduce using rule 7 (stmt)


state 8

    8 stmt: func_case .

    $default  reduce using rule 8 (stmt)


state 9

    9 type_decl: ident . TTYPEOF type TENDL
   21 func_pattern: ident . func_pattern_args
   22             | ident .

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TBLANK       shift, and go to state 20
    TTYPEOF      shift, and go to state 21

    $default  reduce using rule 22 (func_pattern)

    func_pattern_args  go to state 22
    func_pattern_arg   go to state 23
    ident              go to state 24
    numeric            go to state 25


state 10

    0 $accept: program $end .

    $default  accept


state 11

    5 stmts: stmts TENDL .

    $default  reduce using rule 5 (stmts)


state 12

    4 stmts: stmts stmt .

    $default  reduce using rule 4 (stmts)


state 13

   23 func_bind: func_pattern TEQUAL . expr TENDL

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 29


state 14

   18 case: TCASE . expr TEQUAL expr TENDL

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 30


state 15

   19 case_list: case .

    $default  reduce using rule 19 (case_list)


state 16

   20 case_list: case_list . TINTEND case
   24 func_case: func_pattern case_list .

    TINTEND  shift, and go to state 31

    $default  reduce using rule 24 (func_case)


state 17

   27 numeric: TINTEGER .

    $default  reduce using rule 27 (numeric)


state 18

   28 numeric: TDOUBLE .

    $default  reduce using rule 28 (numeric)


state 19

   29 numeric: TBOOL .

    $default  reduce using rule 29 (numeric)


state 20

   15 func_pattern_arg: TBLANK .

    $default  reduce using rule 15 (func_pattern_arg)


state 21

    9 type_decl: ident TTYPEOF . type TENDL

    TTNAME   shift, and go to state 32
    TLPAREN  shift, and go to state 33

    type          go to state 34
    name_of_type  go to state 35


state 22

   13 func_pattern_args: func_pattern_args . func_pattern_arg
   21 func_pattern: ident func_pattern_args .

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TBLANK       shift, and go to state 20

    $default  reduce using rule 21 (func_pattern)

    func_pattern_arg  go to state 36
    ident             go to state 24
    numeric           go to state 25


state 23

   14 func_pattern_args: func_pattern_arg .

    $default  reduce using rule 14 (func_pattern_args)


state 24

   17 func_pattern_arg: ident .

    $default  reduce using rule 17 (func_pattern_arg)


state 25

   16 func_pattern_arg: numeric .

    $default  reduce using rule 16 (func_pattern_arg)


state 26

   37 expr: TLPAREN . expr TRPAREN

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 37


state 27

   30 expr: ident . TLPAREN call_args TRPAREN
   31     | ident .

    TLPAREN  shift, and go to state 38

    $default  reduce using rule 31 (expr)


state 28

   32 expr: numeric .

    $default  reduce using rule 32 (expr)


state 29

   23 func_bind: func_pattern TEQUAL expr . TENDL
   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr

    TCEQ    shift, and go to state 39
    TCNE    shift, and go to state 40
    TCLT    shift, and go to state 41
    TCLE    shift, and go to state 42
    TCGT    shift, and go to state 43
    TCGE    shift, and go to state 44
    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    TENDL   shift, and go to state 49

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 30

   18 case: TCASE expr . TEQUAL expr TENDL
   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr

    TCEQ    shift, and go to state 39
    TCNE    shift, and go to state 40
    TCLT    shift, and go to state 41
    TCLE    shift, and go to state 42
    TCGT    shift, and go to state 43
    TCGE    shift, and go to state 44
    TEQUAL  shift, and go to state 54
    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 31

   20 case_list: case_list TINTEND . case

    TCASE  shift, and go to state 14

    case  go to state 55


state 32

   26 name_of_type: TTNAME .

    $default  reduce using rule 26 (name_of_type)


state 33

   10 type: TLPAREN . type TRPAREN

    TTNAME   shift, and go to state 32
    TLPAREN  shift, and go to state 33

    type          go to state 56
    name_of_type  go to state 35


state 34

    9 type_decl: ident TTYPEOF type . TENDL
   11 type: type . TARROW type

    TARROW  shift, and go to state 57
    TENDL   shift, and go to state 58


state 35

   12 type: name_of_type .

    $default  reduce using rule 12 (type)


state 36

   13 func_pattern_args: func_pattern_args func_pattern_arg .

    $default  reduce using rule 13 (func_pattern_args)


state 37

   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr
   37     | TLPAREN expr . TRPAREN

    TCEQ     shift, and go to state 39
    TCNE     shift, and go to state 40
    TCLT     shift, and go to state 41
    TCLE     shift, and go to state 42
    TCGT     shift, and go to state 43
    TCGE     shift, and go to state 44
    TRPAREN  shift, and go to state 59
    TPLUS    shift, and go to state 45
    TMINUS   shift, and go to state 46
    TMUL     shift, and go to state 47
    TDIV     shift, and go to state 48

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 38

   30 expr: ident TLPAREN . call_args TRPAREN

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    $default  reduce using rule 38 (call_args)

    ident      go to state 27
    numeric    go to state 28
    expr       go to state 60
    call_args  go to state 61


state 39

   41 equ_op: TCEQ .

    $default  reduce using rule 41 (equ_op)


state 40

   42 equ_op: TCNE .

    $default  reduce using rule 42 (equ_op)


state 41

   43 cmp_op: TCLT .

    $default  reduce using rule 43 (cmp_op)


state 42

   44 cmp_op: TCLE .

    $default  reduce using rule 44 (cmp_op)


state 43

   45 cmp_op: TCGT .

    $default  reduce using rule 45 (cmp_op)


state 44

   46 cmp_op: TCGE .

    $default  reduce using rule 46 (cmp_op)


state 45

   47 add_op: TPLUS .

    $default  reduce using rule 47 (add_op)


state 46

   48 add_op: TMINUS .

    $default  reduce using rule 48 (add_op)


state 47

   49 mul_op: TMUL .

    $default  reduce using rule 49 (mul_op)


state 48

   50 mul_op: TDIV .

    $default  reduce using rule 50 (mul_op)


state 49

   23 func_bind: func_pattern TEQUAL expr TENDL .

    $default  reduce using rule 23 (func_bind)


state 50

   33 expr: expr equ_op . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 62


state 51

   34 expr: expr cmp_op . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 63


state 52

   35 expr: expr add_op . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 64


state 53

   36 expr: expr mul_op . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 65


state 54

   18 case: TCASE expr TEQUAL . expr TENDL

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 66


state 55

   20 case_list: case_list TINTEND case .

    $default  reduce using rule 20 (case_list)


state 56

   10 type: TLPAREN type . TRPAREN
   11     | type . TARROW type

    TRPAREN  shift, and go to state 67
    TARROW   shift, and go to state 57


state 57

   11 type: type TARROW . type

    TTNAME   shift, and go to state 32
    TLPAREN  shift, and go to state 33

    type          go to state 68
    name_of_type  go to state 35


state 58

    9 type_decl: ident TTYPEOF type TENDL .

    $default  reduce using rule 9 (type_decl)


state 59

   37 expr: TLPAREN expr TRPAREN .

    $default  reduce using rule 37 (expr)


state 60

   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr
   39 call_args: expr .

    TCEQ    shift, and go to state 39
    TCNE    shift, and go to state 40
    TCLT    shift, and go to state 41
    TCLE    shift, and go to state 42
    TCGT    shift, and go to state 43
    TCGE    shift, and go to state 44
    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48

    $default  reduce using rule 39 (call_args)

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 61

   30 expr: ident TLPAREN call_args . TRPAREN
   40 call_args: call_args . TCOMMA expr

    TRPAREN  shift, and go to state 69
    TCOMMA   shift, and go to state 70


state 62

   33 expr: expr . equ_op expr
   33     | expr equ_op expr .
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr

    TCLT    shift, and go to state 41
    TCLE    shift, and go to state 42
    TCGT    shift, and go to state 43
    TCGE    shift, and go to state 44
    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48

    $default  reduce using rule 33 (expr)

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 63

   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   34     | expr cmp_op expr .
   35     | expr . add_op expr
   36     | expr . mul_op expr

    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48

    $default  reduce using rule 34 (expr)

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 64

   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   35     | expr add_op expr .
   36     | expr . mul_op expr

    TMUL  shift, and go to state 47
    TDIV  shift, and go to state 48

    $default  reduce using rule 35 (expr)

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 65

   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr
   36     | expr mul_op expr .

    $default  reduce using rule 36 (expr)

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 66

   18 case: TCASE expr TEQUAL expr . TENDL
   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr

    TCEQ    shift, and go to state 39
    TCNE    shift, and go to state 40
    TCLT    shift, and go to state 41
    TCLE    shift, and go to state 42
    TCGT    shift, and go to state 43
    TCGE    shift, and go to state 44
    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48
    TENDL   shift, and go to state 71

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53


state 67

   10 type: TLPAREN type TRPAREN .

    $default  reduce using rule 10 (type)


state 68

   11 type: type . TARROW type
   11     | type TARROW type .

    TARROW  shift, and go to state 57

    $default  reduce using rule 11 (type)


state 69

   30 expr: ident TLPAREN call_args TRPAREN .

    $default  reduce using rule 30 (expr)


state 70

   40 call_args: call_args TCOMMA . expr

    TIDENTIFIER  shift, and go to state 1
    TINTEGER     shift, and go to state 17
    TDOUBLE      shift, and go to state 18
    TBOOL        shift, and go to state 19
    TLPAREN      shift, and go to state 26

    ident    go to state 27
    numeric  go to state 28
    expr     go to state 72


state 71

   18 case: TCASE expr TEQUAL expr TENDL .

    $default  reduce using rule 18 (case)


state 72

   33 expr: expr . equ_op expr
   34     | expr . cmp_op expr
   35     | expr . add_op expr
   36     | expr . mul_op expr
   40 call_args: call_args TCOMMA expr .

    TCEQ    shift, and go to state 39
    TCNE    shift, and go to state 40
    TCLT    shift, and go to state 41
    TCLE    shift, and go to state 42
    TCGT    shift, and go to state 43
    TCGE    shift, and go to state 44
    TPLUS   shift, and go to state 45
    TMINUS  shift, and go to state 46
    TMUL    shift, and go to state 47
    TDIV    shift, and go to state 48

    $default  reduce using rule 40 (call_args)

    equ_op  go to state 50
    cmp_op  go to state 51
    add_op  go to state 52
    mul_op  go to state 53
